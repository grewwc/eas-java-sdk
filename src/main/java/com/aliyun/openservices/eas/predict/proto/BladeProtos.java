// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blade.proto

package com.aliyun.openservices.eas.predict.proto;

public final class BladeProtos {
  private BladeProtos() {}
  public static void registerAllExtensions(
      shade.blade.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      shade.blade.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (shade.blade.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code DataType}
   */
  public enum DataType
      implements shade.blade.protobuf.ProtocolMessageEnum {
    /**
     *
     * <pre>
     * Unknown value for DataType. Used to indicate a DataType field
     * has not been set.
     * </pre>
     *
     * <code>DT_UNKNOWN = 0;</code>
     */
    DT_UNKNOWN(0),
    /**
     * <pre>
     * Data types that all computation devices are expected to be
     * capable to support.
     * </pre>
     *
     * <code>DT_FLOAT = 1;</code>
     */
    DT_FLOAT(1),
    /**
     * <code>DT_INT32 = 2;</code>
     */
    DT_INT32(2),
    /**
     * <code>DT_INT64 = 3;</code>
     */
    DT_INT64(3),
    /**
     * <code>DT_STRING = 4;</code>
     */
    DT_STRING(4),
    ;

    /**
     * <code>DT_UNKNOWN = 0;</code>
     */
    public static final int DT_UNKNOWN_VALUE = 0;
    /**
     * <code>DT_FLOAT = 1;</code>
     */
    public static final int DT_FLOAT_VALUE = 1;
    /**
     * <code>DT_INT32 = 2;</code>
     */
    public static final int DT_INT32_VALUE = 2;
    /**
     * <code>DT_INT64 = 3;</code>
     */
    public static final int DT_INT64_VALUE = 3;
    /**
     * <code>DT_STRING = 4;</code>
     */
    public static final int DT_STRING_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataType valueOf(int value) {
      return forNumber(value);
    }

    public static DataType forNumber(int value) {
      switch (value) {
        case 0: return DT_UNKNOWN;
        case 1: return DT_FLOAT;
        case 2: return DT_INT32;
        case 3: return DT_INT64;
        case 4: return DT_STRING;
        default: return null;
      }
    }

    public static shade.blade.protobuf.Internal.EnumLiteMap<DataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final shade.blade.protobuf.Internal.EnumLiteMap<
        DataType> internalValueMap =
          new shade.blade.protobuf.Internal.EnumLiteMap<DataType>() {
            public DataType findValueByNumber(int number) {
              return DataType.forNumber(number);
            }
          };

    public final shade.blade.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final shade.blade.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final shade.blade.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final DataType[] VALUES = values();

    public static DataType valueOf(
        shade.blade.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DataType)
  }

  public interface ShapeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Shape)
      shade.blade.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getDimList();
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    int getDimCount();
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    long getDim(int index);
  }
  /**
   * Protobuf type {@code Shape}
   */
  public  static final class Shape extends
      shade.blade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Shape)
      ShapeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Shape.newBuilder() to construct.
    private Shape(shade.blade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Shape() {
      dim_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final shade.blade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Shape(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.blade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.blade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dim_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              dim_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                dim_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dim_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.blade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = java.util.Collections.unmodifiableList(dim_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.blade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Shape_descriptor;
    }

    @java.lang.Override
    protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Shape_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder.class);
    }

    public static final int DIM_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> dim_;
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getDimList() {
      return dim_;
    }
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    public int getDimCount() {
      return dim_.size();
    }
    /**
     * <code>repeated int64 dim = 1 [packed = true];</code>
     */
    public long getDim(int index) {
      return dim_.get(index);
    }
    private int dimMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.blade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimMemoizedSerializedSize);
      }
      for (int i = 0; i < dim_.size(); i++) {
        output.writeInt64NoTag(dim_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dim_.size(); i++) {
          dataSize += shade.blade.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dim_.get(i));
        }
        size += dataSize;
        if (!getDimList().isEmpty()) {
          size += 1;
          size += shade.blade.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape other = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape) obj;

      boolean result = true;
      result = result && getDimList()
          .equals(other.getDimList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimCount() > 0) {
        hash = (37 * hash) + DIM_FIELD_NUMBER;
        hash = (53 * hash) + getDimList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        java.nio.ByteBuffer data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        java.nio.ByteBuffer data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        shade.blade.protobuf.ByteString data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        shade.blade.protobuf.ByteString data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(byte[] data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        byte[] data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseDelimitedFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        shade.blade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parseFrom(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Shape}
     */
    public static final class Builder extends
        shade.blade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Shape)
        com.aliyun.openservices.eas.predict.proto.BladeProtos.ShapeOrBuilder {
      public static final shade.blade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Shape_descriptor;
      }

      @java.lang.Override
      protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Shape_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.blade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dim_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public shade.blade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Shape_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape build() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape buildPartial() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape result = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = java.util.Collections.unmodifiableList(dim_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dim_ = dim_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          shade.blade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.blade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape other) {
        if (other == com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.getDefaultInstance()) return this;
        if (!other.dim_.isEmpty()) {
          if (dim_.isEmpty()) {
            dim_ = other.dim_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimIsMutable();
            dim_.addAll(other.dim_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> dim_ = java.util.Collections.emptyList();
      private void ensureDimIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = new java.util.ArrayList<java.lang.Long>(dim_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getDimList() {
        return java.util.Collections.unmodifiableList(dim_);
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public int getDimCount() {
        return dim_.size();
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public long getDim(int index) {
        return dim_.get(index);
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder setDim(
          int index, long value) {
        ensureDimIsMutable();
        dim_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder addDim(long value) {
        ensureDimIsMutable();
        dim_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder addAllDim(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDimIsMutable();
        shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
            values, dim_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 dim = 1 [packed = true];</code>
       */
      public Builder clearDim() {
        dim_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Shape)
    }

    // @@protoc_insertion_point(class_scope:Shape)
    private static final com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape();
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final shade.blade.protobuf.Parser<Shape>
        PARSER = new shade.blade.protobuf.AbstractParser<Shape>() {
      @java.lang.Override
      public Shape parsePartialFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.blade.protobuf.InvalidProtocolBufferException {
        return new Shape(input, extensionRegistry);
      }
    };

    public static shade.blade.protobuf.Parser<Shape> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.blade.protobuf.Parser<Shape> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Array)
      shade.blade.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * if simply infer one model without dsl then ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    boolean hasBladeBlobName();
    /**
     * <pre>
     * if simply infer one model without dsl then ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    java.lang.String getBladeBlobName();
    /**
     * <pre>
     * if simply infer one model without dsl then ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    shade.blade.protobuf.ByteString
        getBladeBlobNameBytes();

    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    boolean hasNameInDlModel();
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    java.lang.String getNameInDlModel();
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    shade.blade.protobuf.ByteString
        getNameInDlModelBytes();

    /**
     * <code>required int32 batchsize = 3;</code>
     */
    boolean hasBatchsize();
    /**
     * <code>required int32 batchsize = 3;</code>
     */
    int getBatchsize();

    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>optional .Shape shape = 4;</code>
     */
    boolean hasShape();
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>optional .Shape shape = 4;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape getShape();
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>optional .Shape shape = 4;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.ShapeOrBuilder getShapeOrBuilder();

    /**
     * <code>repeated float float_val = 5 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getFloatValList();
    /**
     * <code>repeated float float_val = 5 [packed = true];</code>
     */
    int getFloatValCount();
    /**
     * <code>repeated float float_val = 5 [packed = true];</code>
     */
    float getFloatVal(int index);

    /**
     * <code>repeated int32 int_val = 6 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getIntValList();
    /**
     * <code>repeated int32 int_val = 6 [packed = true];</code>
     */
    int getIntValCount();
    /**
     * <code>repeated int32 int_val = 6 [packed = true];</code>
     */
    int getIntVal(int index);

    /**
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getInt64ValList();
    /**
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    int getInt64ValCount();
    /**
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    long getInt64Val(int index);

    /**
     * <code>repeated bytes string_val = 8;</code>
     */
    java.util.List<shade.blade.protobuf.ByteString> getStringValList();
    /**
     * <code>repeated bytes string_val = 8;</code>
     */
    int getStringValCount();
    /**
     * <code>repeated bytes string_val = 8;</code>
     */
    shade.blade.protobuf.ByteString getStringVal(int index);
  }
  /**
   * <pre>
   * Protocol buffer representing an array
   * </pre>
   *
   * Protobuf type {@code Array}
   */
  public  static final class Array extends
      shade.blade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Array)
      ArrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Array.newBuilder() to construct.
    private Array(shade.blade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Array() {
      bladeBlobName_ = "";
      nameInDlModel_ = "";
      batchsize_ = 0;
      floatVal_ = java.util.Collections.emptyList();
      intVal_ = java.util.Collections.emptyList();
      int64Val_ = java.util.Collections.emptyList();
      stringVal_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final shade.blade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Array(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.blade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.blade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              shade.blade.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              bladeBlobName_ = bs;
              break;
            }
            case 18: {
              shade.blade.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              nameInDlModel_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              batchsize_ = input.readInt32();
              break;
            }
            case 34: {
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = shape_.toBuilder();
              }
              shape_ = input.readMessage(com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shape_);
                shape_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 45: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                floatVal_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              floatVal_.add(input.readFloat());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                floatVal_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatVal_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                intVal_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              intVal_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                intVal_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                intVal_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                int64Val_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              int64Val_.add(input.readInt64());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                int64Val_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Val_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                stringVal_ = new java.util.ArrayList<shade.blade.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000080;
              }
              stringVal_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.blade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          floatVal_ = java.util.Collections.unmodifiableList(floatVal_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          intVal_ = java.util.Collections.unmodifiableList(intVal_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          int64Val_ = java.util.Collections.unmodifiableList(int64Val_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          stringVal_ = java.util.Collections.unmodifiableList(stringVal_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.blade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Array_descriptor;
    }

    @java.lang.Override
    protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Array_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder.class);
    }

    private int bitField0_;
    public static final int BLADE_BLOB_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object bladeBlobName_;
    /**
     * <pre>
     * if simply infer one model without dsl then ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    public boolean hasBladeBlobName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * if simply infer one model without dsl then ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    public java.lang.String getBladeBlobName() {
      java.lang.Object ref = bladeBlobName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        shade.blade.protobuf.ByteString bs = 
            (shade.blade.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bladeBlobName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * if simply infer one model without dsl then ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    public shade.blade.protobuf.ByteString
        getBladeBlobNameBytes() {
      java.lang.Object ref = bladeBlobName_;
      if (ref instanceof java.lang.String) {
        shade.blade.protobuf.ByteString b = 
            shade.blade.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bladeBlobName_ = b;
        return b;
      } else {
        return (shade.blade.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_IN_DL_MODEL_FIELD_NUMBER = 2;
    private volatile java.lang.Object nameInDlModel_;
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    public boolean hasNameInDlModel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    public java.lang.String getNameInDlModel() {
      java.lang.Object ref = nameInDlModel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        shade.blade.protobuf.ByteString bs = 
            (shade.blade.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nameInDlModel_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    public shade.blade.protobuf.ByteString
        getNameInDlModelBytes() {
      java.lang.Object ref = nameInDlModel_;
      if (ref instanceof java.lang.String) {
        shade.blade.protobuf.ByteString b = 
            shade.blade.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nameInDlModel_ = b;
        return b;
      } else {
        return (shade.blade.protobuf.ByteString) ref;
      }
    }

    public static final int BATCHSIZE_FIELD_NUMBER = 3;
    private int batchsize_;
    /**
     * <code>required int32 batchsize = 3;</code>
     */
    public boolean hasBatchsize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 batchsize = 3;</code>
     */
    public int getBatchsize() {
      return batchsize_;
    }

    public static final int SHAPE_FIELD_NUMBER = 4;
    private com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape shape_;
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>optional .Shape shape = 4;</code>
     */
    public boolean hasShape() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>optional .Shape shape = 4;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape getShape() {
      return shape_ == null ? com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.getDefaultInstance() : shape_;
    }
    /**
     * <pre>
     * Shape of the array.
     * </pre>
     *
     * <code>optional .Shape shape = 4;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.ShapeOrBuilder getShapeOrBuilder() {
      return shape_ == null ? com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.getDefaultInstance() : shape_;
    }

    public static final int FLOAT_VAL_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Float> floatVal_;
    /**
     * <code>repeated float float_val = 5 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getFloatValList() {
      return floatVal_;
    }
    /**
     * <code>repeated float float_val = 5 [packed = true];</code>
     */
    public int getFloatValCount() {
      return floatVal_.size();
    }
    /**
     * <code>repeated float float_val = 5 [packed = true];</code>
     */
    public float getFloatVal(int index) {
      return floatVal_.get(index);
    }
    private int floatValMemoizedSerializedSize = -1;

    public static final int INT_VAL_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> intVal_;
    /**
     * <code>repeated int32 int_val = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getIntValList() {
      return intVal_;
    }
    /**
     * <code>repeated int32 int_val = 6 [packed = true];</code>
     */
    public int getIntValCount() {
      return intVal_.size();
    }
    /**
     * <code>repeated int32 int_val = 6 [packed = true];</code>
     */
    public int getIntVal(int index) {
      return intVal_.get(index);
    }
    private int intValMemoizedSerializedSize = -1;

    public static final int INT64_VAL_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Long> int64Val_;
    /**
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getInt64ValList() {
      return int64Val_;
    }
    /**
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    public int getInt64ValCount() {
      return int64Val_.size();
    }
    /**
     * <code>repeated int64 int64_val = 7 [packed = true];</code>
     */
    public long getInt64Val(int index) {
      return int64Val_.get(index);
    }
    private int int64ValMemoizedSerializedSize = -1;

    public static final int STRING_VAL_FIELD_NUMBER = 8;
    private java.util.List<shade.blade.protobuf.ByteString> stringVal_;
    /**
     * <code>repeated bytes string_val = 8;</code>
     */
    public java.util.List<shade.blade.protobuf.ByteString>
        getStringValList() {
      return stringVal_;
    }
    /**
     * <code>repeated bytes string_val = 8;</code>
     */
    public int getStringValCount() {
      return stringVal_.size();
    }
    /**
     * <code>repeated bytes string_val = 8;</code>
     */
    public shade.blade.protobuf.ByteString getStringVal(int index) {
      return stringVal_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBatchsize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.blade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        shade.blade.protobuf.GeneratedMessageV3.writeString(output, 1, bladeBlobName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        shade.blade.protobuf.GeneratedMessageV3.writeString(output, 2, nameInDlModel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, batchsize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getShape());
      }
      if (getFloatValList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(floatValMemoizedSerializedSize);
      }
      for (int i = 0; i < floatVal_.size(); i++) {
        output.writeFloatNoTag(floatVal_.get(i));
      }
      if (getIntValList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(intValMemoizedSerializedSize);
      }
      for (int i = 0; i < intVal_.size(); i++) {
        output.writeInt32NoTag(intVal_.get(i));
      }
      if (getInt64ValList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(int64ValMemoizedSerializedSize);
      }
      for (int i = 0; i < int64Val_.size(); i++) {
        output.writeInt64NoTag(int64Val_.get(i));
      }
      for (int i = 0; i < stringVal_.size(); i++) {
        output.writeBytes(8, stringVal_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += shade.blade.protobuf.GeneratedMessageV3.computeStringSize(1, bladeBlobName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += shade.blade.protobuf.GeneratedMessageV3.computeStringSize(2, nameInDlModel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += shade.blade.protobuf.CodedOutputStream
          .computeInt32Size(3, batchsize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += shade.blade.protobuf.CodedOutputStream
          .computeMessageSize(4, getShape());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatValList().size();
        size += dataSize;
        if (!getFloatValList().isEmpty()) {
          size += 1;
          size += shade.blade.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatValMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intVal_.size(); i++) {
          dataSize += shade.blade.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(intVal_.get(i));
        }
        size += dataSize;
        if (!getIntValList().isEmpty()) {
          size += 1;
          size += shade.blade.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intValMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Val_.size(); i++) {
          dataSize += shade.blade.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Val_.get(i));
        }
        size += dataSize;
        if (!getInt64ValList().isEmpty()) {
          size += 1;
          size += shade.blade.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        int64ValMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringVal_.size(); i++) {
          dataSize += shade.blade.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(stringVal_.get(i));
        }
        size += dataSize;
        size += 1 * getStringValList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Array)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.BladeProtos.Array other = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Array) obj;

      boolean result = true;
      result = result && (hasBladeBlobName() == other.hasBladeBlobName());
      if (hasBladeBlobName()) {
        result = result && getBladeBlobName()
            .equals(other.getBladeBlobName());
      }
      result = result && (hasNameInDlModel() == other.hasNameInDlModel());
      if (hasNameInDlModel()) {
        result = result && getNameInDlModel()
            .equals(other.getNameInDlModel());
      }
      result = result && (hasBatchsize() == other.hasBatchsize());
      if (hasBatchsize()) {
        result = result && (getBatchsize()
            == other.getBatchsize());
      }
      result = result && (hasShape() == other.hasShape());
      if (hasShape()) {
        result = result && getShape()
            .equals(other.getShape());
      }
      result = result && getFloatValList()
          .equals(other.getFloatValList());
      result = result && getIntValList()
          .equals(other.getIntValList());
      result = result && getInt64ValList()
          .equals(other.getInt64ValList());
      result = result && getStringValList()
          .equals(other.getStringValList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBladeBlobName()) {
        hash = (37 * hash) + BLADE_BLOB_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getBladeBlobName().hashCode();
      }
      if (hasNameInDlModel()) {
        hash = (37 * hash) + NAME_IN_DL_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getNameInDlModel().hashCode();
      }
      if (hasBatchsize()) {
        hash = (37 * hash) + BATCHSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBatchsize();
      }
      if (hasShape()) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShape().hashCode();
      }
      if (getFloatValCount() > 0) {
        hash = (37 * hash) + FLOAT_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getFloatValList().hashCode();
      }
      if (getIntValCount() > 0) {
        hash = (37 * hash) + INT_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getIntValList().hashCode();
      }
      if (getInt64ValCount() > 0) {
        hash = (37 * hash) + INT64_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getInt64ValList().hashCode();
      }
      if (getStringValCount() > 0) {
        hash = (37 * hash) + STRING_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getStringValList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        java.nio.ByteBuffer data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        java.nio.ByteBuffer data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        shade.blade.protobuf.ByteString data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        shade.blade.protobuf.ByteString data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(byte[] data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        byte[] data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseDelimitedFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        shade.blade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parseFrom(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.BladeProtos.Array prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Protocol buffer representing an array
     * </pre>
     *
     * Protobuf type {@code Array}
     */
    public static final class Builder extends
        shade.blade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Array)
        com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder {
      public static final shade.blade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Array_descriptor;
      }

      @java.lang.Override
      protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Array_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.blade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getShapeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bladeBlobName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nameInDlModel_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        batchsize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (shapeBuilder_ == null) {
          shape_ = null;
        } else {
          shapeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        floatVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        intVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        int64Val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        stringVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public shade.blade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Array_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array build() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Array result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array buildPartial() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Array result = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Array(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bladeBlobName_ = bladeBlobName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nameInDlModel_ = nameInDlModel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.batchsize_ = batchsize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (shapeBuilder_ == null) {
          result.shape_ = shape_;
        } else {
          result.shape_ = shapeBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          floatVal_ = java.util.Collections.unmodifiableList(floatVal_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.floatVal_ = floatVal_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          intVal_ = java.util.Collections.unmodifiableList(intVal_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.intVal_ = intVal_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          int64Val_ = java.util.Collections.unmodifiableList(int64Val_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.int64Val_ = int64Val_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          stringVal_ = java.util.Collections.unmodifiableList(stringVal_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.stringVal_ = stringVal_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          shade.blade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.blade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Array) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.BladeProtos.Array)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.BladeProtos.Array other) {
        if (other == com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.getDefaultInstance()) return this;
        if (other.hasBladeBlobName()) {
          bitField0_ |= 0x00000001;
          bladeBlobName_ = other.bladeBlobName_;
          onChanged();
        }
        if (other.hasNameInDlModel()) {
          bitField0_ |= 0x00000002;
          nameInDlModel_ = other.nameInDlModel_;
          onChanged();
        }
        if (other.hasBatchsize()) {
          setBatchsize(other.getBatchsize());
        }
        if (other.hasShape()) {
          mergeShape(other.getShape());
        }
        if (!other.floatVal_.isEmpty()) {
          if (floatVal_.isEmpty()) {
            floatVal_ = other.floatVal_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFloatValIsMutable();
            floatVal_.addAll(other.floatVal_);
          }
          onChanged();
        }
        if (!other.intVal_.isEmpty()) {
          if (intVal_.isEmpty()) {
            intVal_ = other.intVal_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureIntValIsMutable();
            intVal_.addAll(other.intVal_);
          }
          onChanged();
        }
        if (!other.int64Val_.isEmpty()) {
          if (int64Val_.isEmpty()) {
            int64Val_ = other.int64Val_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureInt64ValIsMutable();
            int64Val_.addAll(other.int64Val_);
          }
          onChanged();
        }
        if (!other.stringVal_.isEmpty()) {
          if (stringVal_.isEmpty()) {
            stringVal_ = other.stringVal_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureStringValIsMutable();
            stringVal_.addAll(other.stringVal_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasBatchsize()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Array parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Array) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object bladeBlobName_ = "";
      /**
       * <pre>
       * if simply infer one model without dsl then ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public boolean hasBladeBlobName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * if simply infer one model without dsl then ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public java.lang.String getBladeBlobName() {
        java.lang.Object ref = bladeBlobName_;
        if (!(ref instanceof java.lang.String)) {
          shade.blade.protobuf.ByteString bs =
              (shade.blade.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bladeBlobName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * if simply infer one model without dsl then ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public shade.blade.protobuf.ByteString
          getBladeBlobNameBytes() {
        java.lang.Object ref = bladeBlobName_;
        if (ref instanceof String) {
          shade.blade.protobuf.ByteString b = 
              shade.blade.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bladeBlobName_ = b;
          return b;
        } else {
          return (shade.blade.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * if simply infer one model without dsl then ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public Builder setBladeBlobName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        bladeBlobName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if simply infer one model without dsl then ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public Builder clearBladeBlobName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bladeBlobName_ = getDefaultInstance().getBladeBlobName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if simply infer one model without dsl then ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public Builder setBladeBlobNameBytes(
          shade.blade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        bladeBlobName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nameInDlModel_ = "";
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public boolean hasNameInDlModel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public java.lang.String getNameInDlModel() {
        java.lang.Object ref = nameInDlModel_;
        if (!(ref instanceof java.lang.String)) {
          shade.blade.protobuf.ByteString bs =
              (shade.blade.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nameInDlModel_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public shade.blade.protobuf.ByteString
          getNameInDlModelBytes() {
        java.lang.Object ref = nameInDlModel_;
        if (ref instanceof String) {
          shade.blade.protobuf.ByteString b = 
              shade.blade.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nameInDlModel_ = b;
          return b;
        } else {
          return (shade.blade.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public Builder setNameInDlModel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameInDlModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public Builder clearNameInDlModel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameInDlModel_ = getDefaultInstance().getNameInDlModel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public Builder setNameInDlModelBytes(
          shade.blade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameInDlModel_ = value;
        onChanged();
        return this;
      }

      private int batchsize_ ;
      /**
       * <code>required int32 batchsize = 3;</code>
       */
      public boolean hasBatchsize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 batchsize = 3;</code>
       */
      public int getBatchsize() {
        return batchsize_;
      }
      /**
       * <code>required int32 batchsize = 3;</code>
       */
      public Builder setBatchsize(int value) {
        bitField0_ |= 0x00000004;
        batchsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 batchsize = 3;</code>
       */
      public Builder clearBatchsize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        batchsize_ = 0;
        onChanged();
        return this;
      }

      private com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape shape_ = null;
      private shade.blade.protobuf.SingleFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape, com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ShapeOrBuilder> shapeBuilder_;
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public boolean hasShape() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape getShape() {
        if (shapeBuilder_ == null) {
          return shape_ == null ? com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.getDefaultInstance() : shape_;
        } else {
          return shapeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public Builder setShape(com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shape_ = value;
          onChanged();
        } else {
          shapeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public Builder setShape(
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          shape_ = builderForValue.build();
          onChanged();
        } else {
          shapeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public Builder mergeShape(com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape value) {
        if (shapeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              shape_ != null &&
              shape_ != com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.getDefaultInstance()) {
            shape_ =
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.newBuilder(shape_).mergeFrom(value).buildPartial();
          } else {
            shape_ = value;
          }
          onChanged();
        } else {
          shapeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          shape_ = null;
          onChanged();
        } else {
          shapeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder getShapeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getShapeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.ShapeOrBuilder getShapeOrBuilder() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilder();
        } else {
          return shape_ == null ?
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.getDefaultInstance() : shape_;
        }
      }
      /**
       * <pre>
       * Shape of the array.
       * </pre>
       *
       * <code>optional .Shape shape = 4;</code>
       */
      private shade.blade.protobuf.SingleFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape, com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ShapeOrBuilder> 
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new shade.blade.protobuf.SingleFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape, com.aliyun.openservices.eas.predict.proto.BladeProtos.Shape.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ShapeOrBuilder>(
                  getShape(),
                  getParentForChildren(),
                  isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      private java.util.List<java.lang.Float> floatVal_ = java.util.Collections.emptyList();
      private void ensureFloatValIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          floatVal_ = new java.util.ArrayList<java.lang.Float>(floatVal_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated float float_val = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
          getFloatValList() {
        return java.util.Collections.unmodifiableList(floatVal_);
      }
      /**
       * <code>repeated float float_val = 5 [packed = true];</code>
       */
      public int getFloatValCount() {
        return floatVal_.size();
      }
      /**
       * <code>repeated float float_val = 5 [packed = true];</code>
       */
      public float getFloatVal(int index) {
        return floatVal_.get(index);
      }
      /**
       * <code>repeated float float_val = 5 [packed = true];</code>
       */
      public Builder setFloatVal(
          int index, float value) {
        ensureFloatValIsMutable();
        floatVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_val = 5 [packed = true];</code>
       */
      public Builder addFloatVal(float value) {
        ensureFloatValIsMutable();
        floatVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_val = 5 [packed = true];</code>
       */
      public Builder addAllFloatVal(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatValIsMutable();
        shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatVal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float float_val = 5 [packed = true];</code>
       */
      public Builder clearFloatVal() {
        floatVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> intVal_ = java.util.Collections.emptyList();
      private void ensureIntValIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          intVal_ = new java.util.ArrayList<java.lang.Integer>(intVal_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 int_val = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getIntValList() {
        return java.util.Collections.unmodifiableList(intVal_);
      }
      /**
       * <code>repeated int32 int_val = 6 [packed = true];</code>
       */
      public int getIntValCount() {
        return intVal_.size();
      }
      /**
       * <code>repeated int32 int_val = 6 [packed = true];</code>
       */
      public int getIntVal(int index) {
        return intVal_.get(index);
      }
      /**
       * <code>repeated int32 int_val = 6 [packed = true];</code>
       */
      public Builder setIntVal(
          int index, int value) {
        ensureIntValIsMutable();
        intVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int_val = 6 [packed = true];</code>
       */
      public Builder addIntVal(int value) {
        ensureIntValIsMutable();
        intVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int_val = 6 [packed = true];</code>
       */
      public Builder addAllIntVal(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntValIsMutable();
        shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
            values, intVal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 int_val = 6 [packed = true];</code>
       */
      public Builder clearIntVal() {
        intVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> int64Val_ = java.util.Collections.emptyList();
      private void ensureInt64ValIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          int64Val_ = new java.util.ArrayList<java.lang.Long>(int64Val_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getInt64ValList() {
        return java.util.Collections.unmodifiableList(int64Val_);
      }
      /**
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public int getInt64ValCount() {
        return int64Val_.size();
      }
      /**
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public long getInt64Val(int index) {
        return int64Val_.get(index);
      }
      /**
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder setInt64Val(
          int index, long value) {
        ensureInt64ValIsMutable();
        int64Val_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder addInt64Val(long value) {
        ensureInt64ValIsMutable();
        int64Val_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder addAllInt64Val(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64ValIsMutable();
        shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Val_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 int64_val = 7 [packed = true];</code>
       */
      public Builder clearInt64Val() {
        int64Val_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<shade.blade.protobuf.ByteString> stringVal_ = java.util.Collections.emptyList();
      private void ensureStringValIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          stringVal_ = new java.util.ArrayList<shade.blade.protobuf.ByteString>(stringVal_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bytes string_val = 8;</code>
       */
      public java.util.List<shade.blade.protobuf.ByteString>
          getStringValList() {
        return java.util.Collections.unmodifiableList(stringVal_);
      }
      /**
       * <code>repeated bytes string_val = 8;</code>
       */
      public int getStringValCount() {
        return stringVal_.size();
      }
      /**
       * <code>repeated bytes string_val = 8;</code>
       */
      public shade.blade.protobuf.ByteString getStringVal(int index) {
        return stringVal_.get(index);
      }
      /**
       * <code>repeated bytes string_val = 8;</code>
       */
      public Builder setStringVal(
          int index, shade.blade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValIsMutable();
        stringVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes string_val = 8;</code>
       */
      public Builder addStringVal(shade.blade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValIsMutable();
        stringVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes string_val = 8;</code>
       */
      public Builder addAllStringVal(
          java.lang.Iterable<? extends shade.blade.protobuf.ByteString> values) {
        ensureStringValIsMutable();
        shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringVal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes string_val = 8;</code>
       */
      public Builder clearStringVal() {
        stringVal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Array)
    }

    // @@protoc_insertion_point(class_scope:Array)
    private static final com.aliyun.openservices.eas.predict.proto.BladeProtos.Array DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Array();
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final shade.blade.protobuf.Parser<Array>
        PARSER = new shade.blade.protobuf.AbstractParser<Array>() {
      @java.lang.Override
      public Array parsePartialFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.blade.protobuf.InvalidProtocolBufferException {
        return new Array(input, extensionRegistry);
      }
    };

    public static shade.blade.protobuf.Parser<Array> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.blade.protobuf.Parser<Array> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutputInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OutputInfo)
      shade.blade.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * if simply infer one model without dsl, ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    boolean hasBladeBlobName();
    /**
     * <pre>
     * if simply infer one model without dsl, ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    java.lang.String getBladeBlobName();
    /**
     * <pre>
     * if simply infer one model without dsl, ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    shade.blade.protobuf.ByteString
        getBladeBlobNameBytes();

    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    boolean hasNameInDlModel();
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    java.lang.String getNameInDlModel();
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    shade.blade.protobuf.ByteString
        getNameInDlModelBytes();

    /**
     * <code>optional .DataType data_type = 3;</code>
     */
    boolean hasDataType();
    /**
     * <code>optional .DataType data_type = 3;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType getDataType();
  }
  /**
   * Protobuf type {@code OutputInfo}
   */
  public  static final class OutputInfo extends
      shade.blade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OutputInfo)
      OutputInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutputInfo.newBuilder() to construct.
    private OutputInfo(shade.blade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutputInfo() {
      bladeBlobName_ = "";
      nameInDlModel_ = "";
      dataType_ = 0;
    }

    @java.lang.Override
    public final shade.blade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutputInfo(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.blade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.blade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              shade.blade.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              bladeBlobName_ = bs;
              break;
            }
            case 18: {
              shade.blade.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              nameInDlModel_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType value = com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                dataType_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.blade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.blade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_OutputInfo_descriptor;
    }

    @java.lang.Override
    protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_OutputInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder.class);
    }

    private int bitField0_;
    public static final int BLADE_BLOB_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object bladeBlobName_;
    /**
     * <pre>
     * if simply infer one model without dsl, ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    public boolean hasBladeBlobName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * if simply infer one model without dsl, ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    public java.lang.String getBladeBlobName() {
      java.lang.Object ref = bladeBlobName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        shade.blade.protobuf.ByteString bs = 
            (shade.blade.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bladeBlobName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * if simply infer one model without dsl, ignore this
     * other cases please specify it
     * </pre>
     *
     * <code>optional string blade_blob_name = 1;</code>
     */
    public shade.blade.protobuf.ByteString
        getBladeBlobNameBytes() {
      java.lang.Object ref = bladeBlobName_;
      if (ref instanceof java.lang.String) {
        shade.blade.protobuf.ByteString b = 
            shade.blade.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bladeBlobName_ = b;
        return b;
      } else {
        return (shade.blade.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_IN_DL_MODEL_FIELD_NUMBER = 2;
    private volatile java.lang.Object nameInDlModel_;
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    public boolean hasNameInDlModel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    public java.lang.String getNameInDlModel() {
      java.lang.Object ref = nameInDlModel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        shade.blade.protobuf.ByteString bs = 
            (shade.blade.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nameInDlModel_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * if this is defined in the blade dsl then ignore this
     * </pre>
     *
     * <code>optional string name_in_dl_model = 2;</code>
     */
    public shade.blade.protobuf.ByteString
        getNameInDlModelBytes() {
      java.lang.Object ref = nameInDlModel_;
      if (ref instanceof java.lang.String) {
        shade.blade.protobuf.ByteString b = 
            shade.blade.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nameInDlModel_ = b;
        return b;
      } else {
        return (shade.blade.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_TYPE_FIELD_NUMBER = 3;
    private int dataType_;
    /**
     * <code>optional .DataType data_type = 3;</code>
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .DataType data_type = 3;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType getDataType() {
      @SuppressWarnings("deprecation")
      com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType result = com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType.valueOf(dataType_);
      return result == null ? com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType.DT_UNKNOWN : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.blade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        shade.blade.protobuf.GeneratedMessageV3.writeString(output, 1, bladeBlobName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        shade.blade.protobuf.GeneratedMessageV3.writeString(output, 2, nameInDlModel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, dataType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += shade.blade.protobuf.GeneratedMessageV3.computeStringSize(1, bladeBlobName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += shade.blade.protobuf.GeneratedMessageV3.computeStringSize(2, nameInDlModel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += shade.blade.protobuf.CodedOutputStream
          .computeEnumSize(3, dataType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo other = (com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo) obj;

      boolean result = true;
      result = result && (hasBladeBlobName() == other.hasBladeBlobName());
      if (hasBladeBlobName()) {
        result = result && getBladeBlobName()
            .equals(other.getBladeBlobName());
      }
      result = result && (hasNameInDlModel() == other.hasNameInDlModel());
      if (hasNameInDlModel()) {
        result = result && getNameInDlModel()
            .equals(other.getNameInDlModel());
      }
      result = result && (hasDataType() == other.hasDataType());
      if (hasDataType()) {
        result = result && dataType_ == other.dataType_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBladeBlobName()) {
        hash = (37 * hash) + BLADE_BLOB_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getBladeBlobName().hashCode();
      }
      if (hasNameInDlModel()) {
        hash = (37 * hash) + NAME_IN_DL_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getNameInDlModel().hashCode();
      }
      if (hasDataType()) {
        hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + dataType_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        java.nio.ByteBuffer data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        java.nio.ByteBuffer data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        shade.blade.protobuf.ByteString data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        shade.blade.protobuf.ByteString data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(byte[] data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        byte[] data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseDelimitedFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        shade.blade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parseFrom(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OutputInfo}
     */
    public static final class Builder extends
        shade.blade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OutputInfo)
        com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder {
      public static final shade.blade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_OutputInfo_descriptor;
      }

      @java.lang.Override
      protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_OutputInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.blade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bladeBlobName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nameInDlModel_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        dataType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public shade.blade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_OutputInfo_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo build() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo buildPartial() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo result = new com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bladeBlobName_ = bladeBlobName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nameInDlModel_ = nameInDlModel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dataType_ = dataType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          shade.blade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.blade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo other) {
        if (other == com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.getDefaultInstance()) return this;
        if (other.hasBladeBlobName()) {
          bitField0_ |= 0x00000001;
          bladeBlobName_ = other.bladeBlobName_;
          onChanged();
        }
        if (other.hasNameInDlModel()) {
          bitField0_ |= 0x00000002;
          nameInDlModel_ = other.nameInDlModel_;
          onChanged();
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object bladeBlobName_ = "";
      /**
       * <pre>
       * if simply infer one model without dsl, ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public boolean hasBladeBlobName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * if simply infer one model without dsl, ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public java.lang.String getBladeBlobName() {
        java.lang.Object ref = bladeBlobName_;
        if (!(ref instanceof java.lang.String)) {
          shade.blade.protobuf.ByteString bs =
              (shade.blade.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            bladeBlobName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * if simply infer one model without dsl, ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public shade.blade.protobuf.ByteString
          getBladeBlobNameBytes() {
        java.lang.Object ref = bladeBlobName_;
        if (ref instanceof String) {
          shade.blade.protobuf.ByteString b = 
              shade.blade.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bladeBlobName_ = b;
          return b;
        } else {
          return (shade.blade.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * if simply infer one model without dsl, ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public Builder setBladeBlobName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        bladeBlobName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if simply infer one model without dsl, ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public Builder clearBladeBlobName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bladeBlobName_ = getDefaultInstance().getBladeBlobName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if simply infer one model without dsl, ignore this
       * other cases please specify it
       * </pre>
       *
       * <code>optional string blade_blob_name = 1;</code>
       */
      public Builder setBladeBlobNameBytes(
          shade.blade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        bladeBlobName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nameInDlModel_ = "";
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public boolean hasNameInDlModel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public java.lang.String getNameInDlModel() {
        java.lang.Object ref = nameInDlModel_;
        if (!(ref instanceof java.lang.String)) {
          shade.blade.protobuf.ByteString bs =
              (shade.blade.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nameInDlModel_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public shade.blade.protobuf.ByteString
          getNameInDlModelBytes() {
        java.lang.Object ref = nameInDlModel_;
        if (ref instanceof String) {
          shade.blade.protobuf.ByteString b = 
              shade.blade.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nameInDlModel_ = b;
          return b;
        } else {
          return (shade.blade.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public Builder setNameInDlModel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameInDlModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public Builder clearNameInDlModel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameInDlModel_ = getDefaultInstance().getNameInDlModel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if this is defined in the blade dsl then ignore this
       * </pre>
       *
       * <code>optional string name_in_dl_model = 2;</code>
       */
      public Builder setNameInDlModelBytes(
          shade.blade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameInDlModel_ = value;
        onChanged();
        return this;
      }

      private int dataType_ = 0;
      /**
       * <code>optional .DataType data_type = 3;</code>
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .DataType data_type = 3;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType getDataType() {
        @SuppressWarnings("deprecation")
        com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType result = com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType.valueOf(dataType_);
        return result == null ? com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType.DT_UNKNOWN : result;
      }
      /**
       * <code>optional .DataType data_type = 3;</code>
       */
      public Builder setDataType(com.aliyun.openservices.eas.predict.proto.BladeProtos.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        dataType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DataType data_type = 3;</code>
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dataType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:OutputInfo)
    }

    // @@protoc_insertion_point(class_scope:OutputInfo)
    private static final com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo();
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final shade.blade.protobuf.Parser<OutputInfo>
        PARSER = new shade.blade.protobuf.AbstractParser<OutputInfo>() {
      @java.lang.Override
      public OutputInfo parsePartialFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.blade.protobuf.InvalidProtocolBufferException {
        return new OutputInfo(input, extensionRegistry);
      }
    };

    public static shade.blade.protobuf.Parser<OutputInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.blade.protobuf.Parser<OutputInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Request)
      shade.blade.protobuf.MessageOrBuilder {

    /**
     * <code>optional string tf_signature_name = 1;</code>
     */
    boolean hasTfSignatureName();
    /**
     * <code>optional string tf_signature_name = 1;</code>
     */
    java.lang.String getTfSignatureName();
    /**
     * <code>optional string tf_signature_name = 1;</code>
     */
    shade.blade.protobuf.ByteString
        getTfSignatureNameBytes();

    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> 
        getInputsList();
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getInputs(int index);
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    int getInputsCount();
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
        getInputsOrBuilderList();
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder getInputsOrBuilder(
        int index);

    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo> 
        getOutputInfoList();
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo getOutputInfo(int index);
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    int getOutputInfoCount();
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder> 
        getOutputInfoOrBuilderList();
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder getOutputInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Request}
   */
  public  static final class Request extends
      shade.blade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Request.newBuilder() to construct.
    private Request(shade.blade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      tfSignatureName_ = "";
      inputs_ = java.util.Collections.emptyList();
      outputInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final shade.blade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.blade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.blade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              shade.blade.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              tfSignatureName_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array>();
                mutable_bitField0_ |= 0x00000002;
              }
              inputs_.add(
                  input.readMessage(com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                outputInfo_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              outputInfo_.add(
                  input.readMessage(com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.blade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inputs_ = java.util.Collections.unmodifiableList(inputs_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          outputInfo_ = java.util.Collections.unmodifiableList(outputInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.blade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Request_descriptor;
    }

    @java.lang.Override
    protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Request.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Request.Builder.class);
    }

    private int bitField0_;
    public static final int TF_SIGNATURE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object tfSignatureName_;
    /**
     * <code>optional string tf_signature_name = 1;</code>
     */
    public boolean hasTfSignatureName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string tf_signature_name = 1;</code>
     */
    public java.lang.String getTfSignatureName() {
      java.lang.Object ref = tfSignatureName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        shade.blade.protobuf.ByteString bs = 
            (shade.blade.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tfSignatureName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tf_signature_name = 1;</code>
     */
    public shade.blade.protobuf.ByteString
        getTfSignatureNameBytes() {
      java.lang.Object ref = tfSignatureName_;
      if (ref instanceof java.lang.String) {
        shade.blade.protobuf.ByteString b = 
            shade.blade.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tfSignatureName_ = b;
        return b;
      } else {
        return (shade.blade.protobuf.ByteString) ref;
      }
    }

    public static final int INPUTS_FIELD_NUMBER = 2;
    private java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> inputs_;
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> getInputsList() {
      return inputs_;
    }
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <code>repeated .Array inputs = 2;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }

    public static final int OUTPUT_INFO_FIELD_NUMBER = 3;
    private java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo> outputInfo_;
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo> getOutputInfoList() {
      return outputInfo_;
    }
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder> 
        getOutputInfoOrBuilderList() {
      return outputInfo_;
    }
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    public int getOutputInfoCount() {
      return outputInfo_.size();
    }
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo getOutputInfo(int index) {
      return outputInfo_.get(index);
    }
    /**
     * <code>repeated .OutputInfo output_info = 3;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder getOutputInfoOrBuilder(
        int index) {
      return outputInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getInputsCount(); i++) {
        if (!getInputs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.blade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        shade.blade.protobuf.GeneratedMessageV3.writeString(output, 1, tfSignatureName_);
      }
      for (int i = 0; i < inputs_.size(); i++) {
        output.writeMessage(2, inputs_.get(i));
      }
      for (int i = 0; i < outputInfo_.size(); i++) {
        output.writeMessage(3, outputInfo_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += shade.blade.protobuf.GeneratedMessageV3.computeStringSize(1, tfSignatureName_);
      }
      for (int i = 0; i < inputs_.size(); i++) {
        size += shade.blade.protobuf.CodedOutputStream
          .computeMessageSize(2, inputs_.get(i));
      }
      for (int i = 0; i < outputInfo_.size(); i++) {
        size += shade.blade.protobuf.CodedOutputStream
          .computeMessageSize(3, outputInfo_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Request)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.BladeProtos.Request other = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Request) obj;

      boolean result = true;
      result = result && (hasTfSignatureName() == other.hasTfSignatureName());
      if (hasTfSignatureName()) {
        result = result && getTfSignatureName()
            .equals(other.getTfSignatureName());
      }
      result = result && getInputsList()
          .equals(other.getInputsList());
      result = result && getOutputInfoList()
          .equals(other.getOutputInfoList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTfSignatureName()) {
        hash = (37 * hash) + TF_SIGNATURE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTfSignatureName().hashCode();
      }
      if (getInputsCount() > 0) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getInputsList().hashCode();
      }
      if (getOutputInfoCount() > 0) {
        hash = (37 * hash) + OUTPUT_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getOutputInfoList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        java.nio.ByteBuffer data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        java.nio.ByteBuffer data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        shade.blade.protobuf.ByteString data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        shade.blade.protobuf.ByteString data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(byte[] data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        byte[] data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseDelimitedFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        shade.blade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parseFrom(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.BladeProtos.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Request}
     */
    public static final class Builder extends
        shade.blade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Request)
        com.aliyun.openservices.eas.predict.proto.BladeProtos.RequestOrBuilder {
      public static final shade.blade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Request_descriptor;
      }

      @java.lang.Override
      protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aliyun.openservices.eas.predict.proto.BladeProtos.Request.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Request.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.BladeProtos.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.blade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInputsFieldBuilder();
          getOutputInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tfSignatureName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          inputsBuilder_.clear();
        }
        if (outputInfoBuilder_ == null) {
          outputInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          outputInfoBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public shade.blade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Request_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Request getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.Request.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Request build() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Request buildPartial() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Request result = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tfSignatureName_ = tfSignatureName_;
        if (inputsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            inputs_ = java.util.Collections.unmodifiableList(inputs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.inputs_ = inputs_;
        } else {
          result.inputs_ = inputsBuilder_.build();
        }
        if (outputInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            outputInfo_ = java.util.Collections.unmodifiableList(outputInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.outputInfo_ = outputInfo_;
        } else {
          result.outputInfo_ = outputInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          shade.blade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.blade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Request) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.BladeProtos.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.BladeProtos.Request other) {
        if (other == com.aliyun.openservices.eas.predict.proto.BladeProtos.Request.getDefaultInstance()) return this;
        if (other.hasTfSignatureName()) {
          bitField0_ |= 0x00000001;
          tfSignatureName_ = other.tfSignatureName_;
          onChanged();
        }
        if (inputsBuilder_ == null) {
          if (!other.inputs_.isEmpty()) {
            if (inputs_.isEmpty()) {
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInputsIsMutable();
              inputs_.addAll(other.inputs_);
            }
            onChanged();
          }
        } else {
          if (!other.inputs_.isEmpty()) {
            if (inputsBuilder_.isEmpty()) {
              inputsBuilder_.dispose();
              inputsBuilder_ = null;
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              inputsBuilder_ = 
                shade.blade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputsFieldBuilder() : null;
            } else {
              inputsBuilder_.addAllMessages(other.inputs_);
            }
          }
        }
        if (outputInfoBuilder_ == null) {
          if (!other.outputInfo_.isEmpty()) {
            if (outputInfo_.isEmpty()) {
              outputInfo_ = other.outputInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureOutputInfoIsMutable();
              outputInfo_.addAll(other.outputInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.outputInfo_.isEmpty()) {
            if (outputInfoBuilder_.isEmpty()) {
              outputInfoBuilder_.dispose();
              outputInfoBuilder_ = null;
              outputInfo_ = other.outputInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              outputInfoBuilder_ = 
                shade.blade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputInfoFieldBuilder() : null;
            } else {
              outputInfoBuilder_.addAllMessages(other.outputInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getInputsCount(); i++) {
          if (!getInputs(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object tfSignatureName_ = "";
      /**
       * <code>optional string tf_signature_name = 1;</code>
       */
      public boolean hasTfSignatureName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string tf_signature_name = 1;</code>
       */
      public java.lang.String getTfSignatureName() {
        java.lang.Object ref = tfSignatureName_;
        if (!(ref instanceof java.lang.String)) {
          shade.blade.protobuf.ByteString bs =
              (shade.blade.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tfSignatureName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tf_signature_name = 1;</code>
       */
      public shade.blade.protobuf.ByteString
          getTfSignatureNameBytes() {
        java.lang.Object ref = tfSignatureName_;
        if (ref instanceof String) {
          shade.blade.protobuf.ByteString b = 
              shade.blade.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tfSignatureName_ = b;
          return b;
        } else {
          return (shade.blade.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tf_signature_name = 1;</code>
       */
      public Builder setTfSignatureName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tfSignatureName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tf_signature_name = 1;</code>
       */
      public Builder clearTfSignatureName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tfSignatureName_ = getDefaultInstance().getTfSignatureName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tf_signature_name = 1;</code>
       */
      public Builder setTfSignatureNameBytes(
          shade.blade.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tfSignatureName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> inputs_ =
        java.util.Collections.emptyList();
      private void ensureInputsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array>(inputs_);
          bitField0_ |= 0x00000002;
         }
      }

      private shade.blade.protobuf.RepeatedFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Array, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> inputsBuilder_;

      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> getInputsList() {
        if (inputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputs_);
        } else {
          return inputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public int getInputsCount() {
        if (inputsBuilder_ == null) {
          return inputs_.size();
        } else {
          return inputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getInputs(int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);
        } else {
          return inputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder setInputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.set(index, value);
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder setInputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder addInputs(com.aliyun.openservices.eas.predict.proto.BladeProtos.Array value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder addInputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(index, value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder addInputs(
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder addInputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> values) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputs_);
          onChanged();
        } else {
          inputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder clearInputs() {
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          inputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public Builder removeInputs(int index) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.remove(index);
          onChanged();
        } else {
          inputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder getInputsBuilder(
          int index) {
        return getInputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder getInputsOrBuilder(
          int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);  } else {
          return inputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
           getInputsOrBuilderList() {
        if (inputsBuilder_ != null) {
          return inputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputs_);
        }
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder addInputsBuilder() {
        return getInputsFieldBuilder().addBuilder(
            com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.getDefaultInstance());
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder addInputsBuilder(
          int index) {
        return getInputsFieldBuilder().addBuilder(
            index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.getDefaultInstance());
      }
      /**
       * <code>repeated .Array inputs = 2;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder> 
           getInputsBuilderList() {
        return getInputsFieldBuilder().getBuilderList();
      }
      private shade.blade.protobuf.RepeatedFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Array, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
          getInputsFieldBuilder() {
        if (inputsBuilder_ == null) {
          inputsBuilder_ = new shade.blade.protobuf.RepeatedFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Array, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder>(
                  inputs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          inputs_ = null;
        }
        return inputsBuilder_;
      }

      private java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo> outputInfo_ =
        java.util.Collections.emptyList();
      private void ensureOutputInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          outputInfo_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo>(outputInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private shade.blade.protobuf.RepeatedFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder> outputInfoBuilder_;

      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo> getOutputInfoList() {
        if (outputInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputInfo_);
        } else {
          return outputInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public int getOutputInfoCount() {
        if (outputInfoBuilder_ == null) {
          return outputInfo_.size();
        } else {
          return outputInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo getOutputInfo(int index) {
        if (outputInfoBuilder_ == null) {
          return outputInfo_.get(index);
        } else {
          return outputInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder setOutputInfo(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo value) {
        if (outputInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputInfoIsMutable();
          outputInfo_.set(index, value);
          onChanged();
        } else {
          outputInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder setOutputInfo(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder builderForValue) {
        if (outputInfoBuilder_ == null) {
          ensureOutputInfoIsMutable();
          outputInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder addOutputInfo(com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo value) {
        if (outputInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputInfoIsMutable();
          outputInfo_.add(value);
          onChanged();
        } else {
          outputInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder addOutputInfo(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo value) {
        if (outputInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputInfoIsMutable();
          outputInfo_.add(index, value);
          onChanged();
        } else {
          outputInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder addOutputInfo(
          com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder builderForValue) {
        if (outputInfoBuilder_ == null) {
          ensureOutputInfoIsMutable();
          outputInfo_.add(builderForValue.build());
          onChanged();
        } else {
          outputInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder addOutputInfo(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder builderForValue) {
        if (outputInfoBuilder_ == null) {
          ensureOutputInfoIsMutable();
          outputInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder addAllOutputInfo(
          java.lang.Iterable<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo> values) {
        if (outputInfoBuilder_ == null) {
          ensureOutputInfoIsMutable();
          shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputInfo_);
          onChanged();
        } else {
          outputInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder clearOutputInfo() {
        if (outputInfoBuilder_ == null) {
          outputInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          outputInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public Builder removeOutputInfo(int index) {
        if (outputInfoBuilder_ == null) {
          ensureOutputInfoIsMutable();
          outputInfo_.remove(index);
          onChanged();
        } else {
          outputInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder getOutputInfoBuilder(
          int index) {
        return getOutputInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder getOutputInfoOrBuilder(
          int index) {
        if (outputInfoBuilder_ == null) {
          return outputInfo_.get(index);  } else {
          return outputInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder> 
           getOutputInfoOrBuilderList() {
        if (outputInfoBuilder_ != null) {
          return outputInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputInfo_);
        }
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder addOutputInfoBuilder() {
        return getOutputInfoFieldBuilder().addBuilder(
            com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder addOutputInfoBuilder(
          int index) {
        return getOutputInfoFieldBuilder().addBuilder(
            index, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .OutputInfo output_info = 3;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder> 
           getOutputInfoBuilderList() {
        return getOutputInfoFieldBuilder().getBuilderList();
      }
      private shade.blade.protobuf.RepeatedFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder> 
          getOutputInfoFieldBuilder() {
        if (outputInfoBuilder_ == null) {
          outputInfoBuilder_ = new shade.blade.protobuf.RepeatedFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfo.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.OutputInfoOrBuilder>(
                  outputInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          outputInfo_ = null;
        }
        return outputInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Request)
    }

    // @@protoc_insertion_point(class_scope:Request)
    private static final com.aliyun.openservices.eas.predict.proto.BladeProtos.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Request();
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final shade.blade.protobuf.Parser<Request>
        PARSER = new shade.blade.protobuf.AbstractParser<Request>() {
      @java.lang.Override
      public Request parsePartialFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.blade.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    public static shade.blade.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.blade.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Response)
      shade.blade.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> 
        getOutputsList();
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getOutputs(int index);
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    int getOutputsCount();
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder getOutputsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Response}
   */
  public  static final class Response extends
      shade.blade.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Response)
      ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Response.newBuilder() to construct.
    private Response(shade.blade.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      outputs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final shade.blade.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      shade.blade.protobuf.UnknownFieldSet.Builder unknownFields =
          shade.blade.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                outputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array>();
                mutable_bitField0_ |= 0x00000001;
              }
              outputs_.add(
                  input.readMessage(com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new shade.blade.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final shade.blade.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Response_descriptor;
    }

    @java.lang.Override
    protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Response.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Response.Builder.class);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 1;
    private java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> outputs_;
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .Array outputs = 1;</code>
     */
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getOutputsCount(); i++) {
        if (!getOutputs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(shade.blade.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(1, outputs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < outputs_.size(); i++) {
        size += shade.blade.protobuf.CodedOutputStream
          .computeMessageSize(1, outputs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Response)) {
        return super.equals(obj);
      }
      com.aliyun.openservices.eas.predict.proto.BladeProtos.Response other = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Response) obj;

      boolean result = true;
      result = result && getOutputsList()
          .equals(other.getOutputsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        java.nio.ByteBuffer data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        java.nio.ByteBuffer data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        shade.blade.protobuf.ByteString data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        shade.blade.protobuf.ByteString data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(byte[] data)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        byte[] data,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws shade.blade.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseDelimitedFrom(
        java.io.InputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        shade.blade.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parseFrom(
        shade.blade.protobuf.CodedInputStream input,
        shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return shade.blade.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aliyun.openservices.eas.predict.proto.BladeProtos.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Response}
     */
    public static final class Builder extends
        shade.blade.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Response)
        com.aliyun.openservices.eas.predict.proto.BladeProtos.ResponseOrBuilder {
      public static final shade.blade.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Response_descriptor;
      }

      @java.lang.Override
      protected shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aliyun.openservices.eas.predict.proto.BladeProtos.Response.class, com.aliyun.openservices.eas.predict.proto.BladeProtos.Response.Builder.class);
      }

      // Construct using com.aliyun.openservices.eas.predict.proto.BladeProtos.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          shade.blade.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (shade.blade.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOutputsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public shade.blade.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.internal_static_Response_descriptor;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Response getDefaultInstanceForType() {
        return com.aliyun.openservices.eas.predict.proto.BladeProtos.Response.getDefaultInstance();
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Response build() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Response buildPartial() {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Response result = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Response(this);
        int from_bitField0_ = bitField0_;
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          shade.blade.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          shade.blade.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(shade.blade.protobuf.Message other) {
        if (other instanceof com.aliyun.openservices.eas.predict.proto.BladeProtos.Response) {
          return mergeFrom((com.aliyun.openservices.eas.predict.proto.BladeProtos.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aliyun.openservices.eas.predict.proto.BladeProtos.Response other) {
        if (other == com.aliyun.openservices.eas.predict.proto.BladeProtos.Response.getDefaultInstance()) return this;
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              outputsBuilder_ = 
                shade.blade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getOutputsCount(); i++) {
          if (!getOutputs(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aliyun.openservices.eas.predict.proto.BladeProtos.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (shade.blade.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aliyun.openservices.eas.predict.proto.BladeProtos.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          outputs_ = new java.util.ArrayList<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array>(outputs_);
          bitField0_ |= 0x00000001;
         }
      }

      private shade.blade.protobuf.RepeatedFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Array, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder setOutputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder setOutputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder addOutputs(com.aliyun.openservices.eas.predict.proto.BladeProtos.Array value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder addOutputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder addOutputs(
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder addOutputs(
          int index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.Array> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          shade.blade.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public java.util.List<? extends com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.getDefaultInstance());
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.getDefaultInstance());
      }
      /**
       * <code>repeated .Array outputs = 1;</code>
       */
      public java.util.List<com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private shade.blade.protobuf.RepeatedFieldBuilderV3<
          com.aliyun.openservices.eas.predict.proto.BladeProtos.Array, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new shade.blade.protobuf.RepeatedFieldBuilderV3<
              com.aliyun.openservices.eas.predict.proto.BladeProtos.Array, com.aliyun.openservices.eas.predict.proto.BladeProtos.Array.Builder, com.aliyun.openservices.eas.predict.proto.BladeProtos.ArrayOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final shade.blade.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Response)
    }

    // @@protoc_insertion_point(class_scope:Response)
    private static final com.aliyun.openservices.eas.predict.proto.BladeProtos.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aliyun.openservices.eas.predict.proto.BladeProtos.Response();
    }

    public static com.aliyun.openservices.eas.predict.proto.BladeProtos.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final shade.blade.protobuf.Parser<Response>
        PARSER = new shade.blade.protobuf.AbstractParser<Response>() {
      @java.lang.Override
      public Response parsePartialFrom(
          shade.blade.protobuf.CodedInputStream input,
          shade.blade.protobuf.ExtensionRegistryLite extensionRegistry)
          throws shade.blade.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    public static shade.blade.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public shade.blade.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aliyun.openservices.eas.predict.proto.BladeProtos.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final shade.blade.protobuf.Descriptors.Descriptor
    internal_static_Shape_descriptor;
  private static final 
    shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Shape_fieldAccessorTable;
  private static final shade.blade.protobuf.Descriptors.Descriptor
    internal_static_Array_descriptor;
  private static final 
    shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Array_fieldAccessorTable;
  private static final shade.blade.protobuf.Descriptors.Descriptor
    internal_static_OutputInfo_descriptor;
  private static final 
    shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_OutputInfo_fieldAccessorTable;
  private static final shade.blade.protobuf.Descriptors.Descriptor
    internal_static_Request_descriptor;
  private static final 
    shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Request_fieldAccessorTable;
  private static final shade.blade.protobuf.Descriptors.Descriptor
    internal_static_Response_descriptor;
  private static final 
    shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Response_fieldAccessorTable;

  public static shade.blade.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  shade.blade.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013blade.proto\"\030\n\005Shape\022\017\n\003dim\030\001 \003(\003B\002\020\001\"" +
      "\273\001\n\005Array\022\027\n\017blade_blob_name\030\001 \001(\t\022\030\n\020na" +
      "me_in_dl_model\030\002 \001(\t\022\021\n\tbatchsize\030\003 \002(\005\022" +
      "\025\n\005shape\030\004 \001(\0132\006.Shape\022\025\n\tfloat_val\030\005 \003(" +
      "\002B\002\020\001\022\023\n\007int_val\030\006 \003(\005B\002\020\001\022\025\n\tint64_val\030" +
      "\007 \003(\003B\002\020\001\022\022\n\nstring_val\030\010 \003(\014\"]\n\nOutputI" +
      "nfo\022\027\n\017blade_blob_name\030\001 \001(\t\022\030\n\020name_in_" +
      "dl_model\030\002 \001(\t\022\034\n\tdata_type\030\003 \001(\0162\t.Data" +
      "Type\"^\n\007Request\022\031\n\021tf_signature_name\030\001 \001" +
      "(\t\022\026\n\006inputs\030\002 \003(\0132\006.Array\022 \n\013output_inf" +
      "o\030\003 \003(\0132\013.OutputInfo\"#\n\010Response\022\027\n\007outp" +
      "uts\030\001 \003(\0132\006.Array*S\n\010DataType\022\016\n\nDT_UNKN" +
      "OWN\020\000\022\014\n\010DT_FLOAT\020\001\022\014\n\010DT_INT32\020\002\022\014\n\010DT_" +
      "INT64\020\003\022\r\n\tDT_STRING\020\004B;\n)com.aliyun.ope" +
      "nservices.eas.predict.protoB\013BladeProtos" +
      "\370\001\001"
    };
    shade.blade.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new shade.blade.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public shade.blade.protobuf.ExtensionRegistry assignDescriptors(
              shade.blade.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    shade.blade.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new shade.blade.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Shape_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Shape_fieldAccessorTable = new
      shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Shape_descriptor,
        new java.lang.String[] { "Dim", });
    internal_static_Array_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Array_fieldAccessorTable = new
      shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Array_descriptor,
        new java.lang.String[] { "BladeBlobName", "NameInDlModel", "Batchsize", "Shape", "FloatVal", "IntVal", "Int64Val", "StringVal", });
    internal_static_OutputInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_OutputInfo_fieldAccessorTable = new
      shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OutputInfo_descriptor,
        new java.lang.String[] { "BladeBlobName", "NameInDlModel", "DataType", });
    internal_static_Request_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Request_fieldAccessorTable = new
      shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Request_descriptor,
        new java.lang.String[] { "TfSignatureName", "Inputs", "OutputInfo", });
    internal_static_Response_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Response_fieldAccessorTable = new
      shade.blade.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Response_descriptor,
        new java.lang.String[] { "Outputs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
